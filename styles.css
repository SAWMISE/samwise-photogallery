* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Georgia', serif;
    background: #0a0a0a;
    color: #ffffff;
    overflow: hidden;
}

/* Hero Section */
.hero {
    height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background: linear-gradient(135deg, #1a1a1a 0%, #252525 50%, #1a1a1a 100%);
    position: relative;
    overflow: hidden;
}

/* Canvas Grid Background */
.grid-canvas {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
    opacity: 0.8;
}

/* ========================================
   NEURAL WEB NETWORK
   ======================================== */

.neural-web {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 2;
    pointer-events: none;
    /* Mask to exclude center radar area */
    -webkit-mask-image: radial-gradient(circle at center, transparent 0%, transparent 270px, black 270px, black 100%);
    mask-image: radial-gradient(circle at center, transparent 0%, transparent 270px, black 270px, black 100%);
    perspective: 1000px;
}

/* Web Nodes - Primary hub nodes */
.web-node {
    position: absolute;
    left: var(--x);
    top: var(--y);
    width: 12px;
    height: 12px;
    transform: translate(-50%, -50%);
    animation:
        webNodeFloat 15s ease-in-out infinite,
        webNodePulse var(--pulse-speed, 5s) ease-in-out infinite,
        webNodeRotate 20s linear infinite;
    animation-delay: var(--delay, 0s);
    transform-style: preserve-3d;
    filter: drop-shadow(0 0 8px rgba(255, 255, 255, 0.4));
}

/* Node core */
.web-node::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100%;
    height: 100%;
    background: radial-gradient(
        circle at center,
        rgba(255, 255, 255, 0.9) 0%,
        rgba(255, 255, 255, 0.6) 40%,
        rgba(255, 255, 255, 0.2) 70%,
        transparent 100%
    );
    border-radius: 50%;
    box-shadow:
        0 0 10px rgba(255, 255, 255, 0.6),
        0 0 20px rgba(255, 255, 255, 0.3),
        inset 0 0 5px rgba(255, 255, 255, 0.8);
    animation: webNodeCorePulse var(--pulse-speed, 5s) ease-in-out infinite;
    animation-delay: var(--delay, 0s);
}

/* Node outer ring - technical aesthetic */
.web-node::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 200%;
    height: 200%;
    border: 1px solid rgba(255, 255, 255, 0.15);
    border-radius: 50%;
    box-shadow:
        0 0 15px rgba(255, 255, 255, 0.2),
        inset 0 0 10px rgba(255, 255, 255, 0.1);
    animation: webNodeRing var(--pulse-speed, 5s) ease-in-out infinite;
    animation-delay: var(--delay, 0s);
}

/* Hexagonal technical overlay for primary and secondary nodes */
.node-hex {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 300%;
    height: 300%;
    pointer-events: none;
}

.node-hex::before,
.node-hex::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) rotate(0deg);
    width: 100%;
    height: 100%;
    border: 1px solid rgba(255, 255, 255, 0.06);
    clip-path: polygon(
        50% 0%,
        90% 25%,
        90% 75%,
        50% 100%,
        10% 75%,
        10% 25%
    );
    animation: hexRotateSlow 30s linear infinite;
}

.node-hex::after {
    animation: hexRotateFast 20s linear infinite reverse;
    opacity: 0.5;
    transform: translate(-50%, -50%) rotate(30deg);
}

@keyframes hexRotateSlow {
    0% {
        transform: translate(-50%, -50%) rotate(0deg);
        opacity: 0.3;
    }
    50% {
        opacity: 0.6;
    }
    100% {
        transform: translate(-50%, -50%) rotate(360deg);
        opacity: 0.3;
    }
}

@keyframes hexRotateFast {
    0% {
        transform: translate(-50%, -50%) rotate(30deg);
    }
    100% {
        transform: translate(-50%, -50%) rotate(-330deg);
    }
}

/* Secondary nodes - smaller, medium importance */
.web-node-secondary {
    width: 8px;
    height: 8px;
    opacity: 0.8;
    filter: drop-shadow(0 0 6px rgba(255, 255, 255, 0.3));
}

.web-node-secondary::before {
    background: radial-gradient(
        circle at center,
        rgba(255, 255, 255, 0.8) 0%,
        rgba(255, 255, 255, 0.5) 40%,
        rgba(255, 255, 255, 0.15) 70%,
        transparent 100%
    );
}

/* Micro nodes - smallest, subtle presence */
.web-node-micro {
    width: 5px;
    height: 5px;
    opacity: 0.6;
    filter: drop-shadow(0 0 4px rgba(255, 255, 255, 0.2));
}

.web-node-micro::before {
    background: radial-gradient(
        circle at center,
        rgba(255, 255, 255, 0.7) 0%,
        rgba(255, 255, 255, 0.4) 40%,
        rgba(255, 255, 255, 0.1) 70%,
        transparent 100%
    );
}

.web-node-micro::after {
    width: 150%;
    height: 150%;
    border-width: 0.5px;
}

/* Connection Layer - SVG for connections */
.connection-layer {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 2;
    pointer-events: none;
    /* Mask to exclude center radar area */
    -webkit-mask-image: radial-gradient(circle at center, transparent 0%, transparent 270px, black 270px, black 100%);
    mask-image: radial-gradient(circle at center, transparent 0%, transparent 270px, black 270px, black 100%);
    opacity: 0.6;
    mix-blend-mode: screen;
    filter: blur(0.3px);
}

/* Connection lines - solid lines */
.connection-layer line {
    /* Removed stroke-dasharray for solid lines */
    /* Removed animation to prevent glitchy flashing */
}

/* Atmospheric Depth Overlay - Layered for 3D effect */
.grid-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 3;
    pointer-events: none;
    mix-blend-mode: overlay;
}

/* Depth layers for atmospheric perspective */
.depth-layer {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

.depth-near {
    background:
        radial-gradient(
            ellipse 800px 600px at 20% 30%,
            rgba(255, 255, 255, 0.03) 0%,
            transparent 50%
        ),
        radial-gradient(
            ellipse 700px 500px at 80% 70%,
            rgba(255, 255, 255, 0.025) 0%,
            transparent 50%
        );
    animation: depthDrift 30s ease-in-out infinite;
    transform: translateZ(50px);
}

.depth-mid {
    background:
        radial-gradient(
            ellipse 1000px 800px at 60% 50%,
            rgba(26, 26, 26, 0.2) 0%,
            transparent 60%
        ),
        linear-gradient(
            135deg,
            transparent 0%,
            rgba(255, 255, 255, 0.015) 50%,
            transparent 100%
        );
    animation: depthDrift 40s ease-in-out infinite reverse;
    transform: translateZ(30px);
}

.depth-far {
    background:
        radial-gradient(
            ellipse at center,
            transparent 0%,
            rgba(26, 26, 26, 0.3) 50%,
            rgba(10, 10, 10, 0.4) 100%
        ),
        repeating-linear-gradient(
            0deg,
            transparent,
            transparent 150px,
            rgba(255, 255, 255, 0.008) 150px,
            rgba(255, 255, 255, 0.008) 152px
        ),
        repeating-linear-gradient(
            90deg,
            transparent,
            transparent 150px,
            rgba(255, 255, 255, 0.008) 150px,
            rgba(255, 255, 255, 0.008) 152px
        );
    animation: depthScan 25s linear infinite;
    transform: translateZ(10px);
}

.hero-content {
    text-align: center;
    z-index: 10;
    position: relative;
}

.hero h1 {
    font-size: 5rem;
    font-weight: 100;
    letter-spacing: 12px;
    margin-bottom: 20px;
    opacity: 0;
    animation: fadeInUp 1s ease 0.5s forwards;
    text-shadow:
        0 0 20px rgba(255, 255, 255, 0.1),
        0 0 40px rgba(255, 255, 255, 0.05);
    position: relative;
}

.hero h1::before {
    content: 'SAMWISE';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0.05;
    z-index: -1;
    animation: glitchText 10s ease-in-out infinite;
}

.hero p {
    font-size: 1.2rem;
    opacity: 0.7;
    letter-spacing: 2px;
    opacity: 0;
    animation: fadeInUp 1s ease 1s forwards;
}

/* ========================================
   RADAR SCANNER SYSTEM
   ======================================== */

.radar-container {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 500px;
    height: 500px;
    z-index: 5;
    pointer-events: none;
}

.radar-screen {
    position: relative;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background: radial-gradient(circle, rgba(26, 26, 26, 0.4) 0%, rgba(26, 26, 26, 0.1) 100%);
    border: 2px solid rgba(255, 255, 255, 0.1);
    box-shadow:
        0 0 30px rgba(255, 255, 255, 0.05),
        0 0 60px rgba(255, 255, 255, 0.03),
        inset 0 0 50px rgba(255, 255, 255, 0.02);
    overflow: hidden;
    pointer-events: all;
}

/* Radar concentric circles */
.radar-circle {
    position: absolute;
    top: 50%;
    left: 50%;
    width: var(--size);
    height: var(--size);
    border: 1px solid rgba(255, 255, 255, 0.08);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.05);
    animation: radarPulse 8s ease-in-out infinite;
}

.radar-circle:nth-child(2) {
    animation-delay: 1s;
}

.radar-circle:nth-child(3) {
    animation-delay: 2s;
}

.radar-circle:nth-child(4) {
    animation-delay: 3s;
}

/* Radar crosshair */
.radar-crosshair {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    /* Mask to exclude center radar area - same as grid particles */
    -webkit-mask-image: radial-gradient(circle at center, transparent 0%, transparent 270px, black 270px, black 100%);
    mask-image: radial-gradient(circle at center, transparent 0%, transparent 270px, black 270px, black 100%);
}

.crosshair-line {
    position: absolute;
    background: linear-gradient(90deg,
        transparent 0%,
        rgba(255, 255, 255, 0.15) 50%,
        transparent 100%);
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.1);
}

.crosshair-h {
    width: 100%;
    height: 1px;
    top: 50%;
    left: 0;
    transform: translateY(-50%);
}

.crosshair-v {
    width: 1px;
    height: 100%;
    left: 50%;
    top: 0;
    transform: translateX(-50%) rotate(90deg);
    background: linear-gradient(90deg,
        transparent 0%,
        rgba(255, 255, 255, 0.15) 50%,
        transparent 100%);
}

/* Hexagonal grid overlay */
.hex-grid {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    background-image:
        repeating-linear-gradient(0deg, transparent, transparent 35px, rgba(255, 255, 255, 0.02) 35px, rgba(255, 255, 255, 0.02) 36px),
        repeating-linear-gradient(60deg, transparent, transparent 35px, rgba(255, 255, 255, 0.02) 35px, rgba(255, 255, 255, 0.02) 36px),
        repeating-linear-gradient(120deg, transparent, transparent 35px, rgba(255, 255, 255, 0.02) 35px, rgba(255, 255, 255, 0.02) 36px);
    opacity: 0.5;
    animation: hexRotate 20s linear infinite;
}

/* Radar sweep */
.radar-sweep {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    border-radius: 50%;
    background: conic-gradient(
        from 0deg,
        transparent 0deg,
        transparent 270deg,
        rgba(255, 255, 255, 0.15) 300deg,
        rgba(255, 255, 255, 0.05) 330deg,
        transparent 360deg
    );
    animation: radarSweep 8s linear infinite;
    filter: blur(2px);
}

.radar-sweep::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background: conic-gradient(
        from 0deg,
        transparent 0deg,
        transparent 280deg,
        rgba(255, 255, 255, 0.2) 310deg,
        transparent 340deg
    );
    filter: blur(5px);
}

/* Pulse rings */
.radar-pulse {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border: 2px solid rgba(255, 255, 255, 0.4);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    animation: radarPulseWave 8s ease-out infinite;
    pointer-events: none;
}

/* Scan lines */
.scan-lines {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    background: repeating-linear-gradient(
        0deg,
        transparent,
        transparent 2px,
        rgba(255, 255, 255, 0.02) 2px,
        rgba(255, 255, 255, 0.02) 4px
    );
    border-radius: 50%;
    animation: scanMove 15s linear infinite;
    opacity: 0.6;
}

/* Radar blips */
.radar-blips {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    display: none; /* Hide all radar blips */
}

.radar-blip {
    position: absolute;
    width: 8px;
    height: 8px;
    background: rgba(255, 255, 255, 0.8);
    border-radius: 50%;
    box-shadow:
        0 0 10px rgba(255, 255, 255, 0.6),
        0 0 20px rgba(255, 255, 255, 0.4),
        0 0 30px rgba(255, 255, 255, 0.2);
    animation: blipPulse 4s ease-in-out infinite;
    transform: translate(-50%, -50%);
}

.radar-blip::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 20px;
    height: 20px;
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    animation: blipRing 4s ease-out infinite;
}

.radar-blip.detected {
    background: rgba(255, 255, 255, 1);
    animation: blipDetect 1s ease-out;
}

/* Radar corner decorations */
.radar-corner {
    position: absolute;
    width: 40px;
    height: 40px;
    border: 2px solid rgba(255, 255, 255, 0.2);
}

.corner-tl {
    top: -60px;
    left: -60px;
    border-right: none;
    border-bottom: none;
    box-shadow: -2px -2px 10px rgba(255, 255, 255, 0.1);
}

.corner-tr {
    top: -60px;
    right: -60px;
    border-left: none;
    border-bottom: none;
    box-shadow: 2px -2px 10px rgba(255, 255, 255, 0.1);
}

.corner-bl {
    bottom: -60px;
    left: -60px;
    border-right: none;
    border-top: none;
    box-shadow: -2px 2px 10px rgba(255, 255, 255, 0.1);
}

.corner-br {
    bottom: -60px;
    right: -60px;
    border-left: none;
    border-top: none;
    box-shadow: 2px 2px 10px rgba(255, 255, 255, 0.1);
}

/* Data readout panels */
.radar-data {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 120px;
    padding: 15px;
    background: rgba(26, 26, 26, 0.6);
    border: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(10px);
}

.radar-data-left {
    left: -180px;
    border-left: 3px solid rgba(255, 255, 255, 0.3);
}

.radar-data-right {
    right: -180px;
    border-right: 3px solid rgba(255, 255, 255, 0.3);
}

.data-line {
    height: 2px;
    background: rgba(255, 255, 255, 0.2);
    margin: 8px 0;
    position: relative;
    overflow: hidden;
}

.data-line::after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.6), transparent);
    animation: dataScroll 4s ease-in-out infinite;
}

.data-line:nth-child(2)::after {
    animation-delay: 0.3s;
}

.data-line:nth-child(3)::after {
    animation-delay: 0.6s;
}

.data-text {
    font-size: 0.7rem;
    letter-spacing: 2px;
    color: rgba(255, 255, 255, 0.6);
    margin-top: 10px;
    text-align: center;
    font-family: monospace;
    animation: textBlink 4s ease-in-out infinite;
}

/* Radar Animations */
@keyframes radarSweep {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

@keyframes radarPulse {
    0%, 100% {
        opacity: 0.3;
        transform: translate(-50%, -50%) scale(1);
    }
    50% {
        opacity: 0.6;
        transform: translate(-50%, -50%) scale(1.02);
    }
}

@keyframes radarPulseWave {
    0% {
        width: 0;
        height: 0;
        opacity: 1;
        border-width: 2px;
    }
    50% {
        opacity: 0.5;
        border-width: 1px;
    }
    100% {
        width: 500px;
        height: 500px;
        opacity: 0;
        border-width: 0;
    }
}

@keyframes hexRotate {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

@keyframes scanMove {
    0% {
        transform: translateY(0);
    }
    100% {
        transform: translateY(20px);
    }
}

@keyframes blipPulse {
    0%, 100% {
        opacity: 0.6;
        transform: translate(-50%, -50%) scale(1);
    }
    50% {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1.2);
    }
}

@keyframes blipRing {
    0% {
        width: 20px;
        height: 20px;
        opacity: 0.6;
    }
    100% {
        width: 40px;
        height: 40px;
        opacity: 0;
    }
}

@keyframes blipDetect {
    0% {
        transform: translate(-50%, -50%) scale(1);
        box-shadow:
            0 0 10px rgba(255, 255, 255, 0.6),
            0 0 20px rgba(255, 255, 255, 0.4);
    }
    50% {
        transform: translate(-50%, -50%) scale(1.5);
        box-shadow:
            0 0 30px rgba(255, 255, 255, 1),
            0 0 60px rgba(255, 255, 255, 0.8),
            0 0 90px rgba(255, 255, 255, 0.6);
    }
    100% {
        transform: translate(-50%, -50%) scale(1);
        box-shadow:
            0 0 10px rgba(255, 255, 255, 0.6),
            0 0 20px rgba(255, 255, 255, 0.4);
    }
}

@keyframes dataScroll {
    0% {
        left: -100%;
    }
    100% {
        left: 100%;
    }
}

@keyframes textBlink {
    0%, 100% {
        opacity: 0.6;
    }
    50% {
        opacity: 1;
    }
}

/* Responsive radar */
@media (max-width: 768px) {
    .radar-container {
        width: 300px;
        height: 300px;
    }

    .radar-data {
        display: none;
    }

    .radar-corner {
        width: 30px;
        height: 30px;
    }

    .corner-tl, .corner-tr {
        top: -40px;
    }

    .corner-bl, .corner-br {
        bottom: -40px;
    }

    .corner-tl, .corner-bl {
        left: -40px;
    }

    .corner-tr, .corner-br {
        right: -40px;
    }

    /* Adjust neural web mask for smaller radar on mobile */
    .neural-web {
        -webkit-mask-image: radial-gradient(circle at center, transparent 0%, transparent 170px, black 170px, black 100%);
        mask-image: radial-gradient(circle at center, transparent 0%, transparent 170px, black 170px, black 100%);
    }

    /* Adjust connection layer mask for smaller radar on mobile */
    .connection-layer {
        -webkit-mask-image: radial-gradient(circle at center, transparent 0%, transparent 170px, black 170px, black 100%);
        mask-image: radial-gradient(circle at center, transparent 0%, transparent 170px, black 170px, black 100%);
    }

    /* Adjust crosshair mask for smaller radar on mobile */
    .radar-crosshair {
        -webkit-mask-image: radial-gradient(circle at center, transparent 0%, transparent 170px, black 170px, black 100%);
        mask-image: radial-gradient(circle at center, transparent 0%, transparent 170px, black 170px, black 100%);
    }

    /* Optimize web nodes for mobile */
    .web-node {
        width: 10px;
        height: 10px;
    }

    .web-node-secondary {
        width: 6px;
        height: 6px;
    }

    .web-node-micro {
        width: 4px;
        height: 4px;
    }

    @keyframes radarPulseWave {
        0% {
            width: 0;
            height: 0;
            opacity: 1;
        }
        100% {
            width: 300px;
            height: 300px;
            opacity: 0;
        }
    }
}

/* ========================================
   NEURAL WEB ANIMATIONS
   ======================================== */

/* Node floating animation - organic movement */
@keyframes webNodeFloat {
    0%, 100% {
        transform: translate(-50%, -50%) translateX(0) translateY(0);
    }
    25% {
        transform: translate(-50%, -50%) translateX(15px) translateY(-20px);
    }
    50% {
        transform: translate(-50%, -50%) translateX(-10px) translateY(-35px);
    }
    75% {
        transform: translate(-50%, -50%) translateX(20px) translateY(-15px);
    }
}

/* Node pulsing animation - rhythmic breathing */
@keyframes webNodePulse {
    0%, 100% {
        opacity: 0.7;
        filter: drop-shadow(0 0 8px rgba(255, 255, 255, 0.4));
    }
    50% {
        opacity: 1;
        filter: drop-shadow(0 0 15px rgba(255, 255, 255, 0.7));
    }
}

/* Node rotation - subtle 3D effect */
@keyframes webNodeRotate {
    0% {
        transform: translate(-50%, -50%) rotateZ(0deg);
    }
    100% {
        transform: translate(-50%, -50%) rotateZ(360deg);
    }
}

/* Node core pulse - inner glow */
@keyframes webNodeCorePulse {
    0%, 100% {
        transform: translate(-50%, -50%) scale(1);
        box-shadow:
            0 0 10px rgba(255, 255, 255, 0.6),
            0 0 20px rgba(255, 255, 255, 0.3),
            inset 0 0 5px rgba(255, 255, 255, 0.8);
    }
    50% {
        transform: translate(-50%, -50%) scale(1.3);
        box-shadow:
            0 0 15px rgba(255, 255, 255, 0.8),
            0 0 30px rgba(255, 255, 255, 0.5),
            inset 0 0 8px rgba(255, 255, 255, 1);
    }
}

/* Node ring expansion */
@keyframes webNodeRing {
    0%, 100% {
        transform: translate(-50%, -50%) scale(1);
        opacity: 0.3;
    }
    50% {
        transform: translate(-50%, -50%) scale(1.4);
        opacity: 0.6;
    }
}

/* Depth layer drift - atmospheric movement */
@keyframes depthDrift {
    0%, 100% {
        transform: translateX(0) translateY(0);
        opacity: 1;
    }
    50% {
        transform: translateX(30px) translateY(-20px);
        opacity: 0.7;
    }
}

/* Depth scan - subtle grid scan effect */
@keyframes depthScan {
    0% {
        transform: translateY(0);
    }
    100% {
        transform: translateY(40px);
    }
}

@keyframes glitchText {
    0%, 90%, 100% {
        transform: translate(0, 0);
        opacity: 0.05;
    }
    92% {
        transform: translate(2px, -2px);
        opacity: 0.1;
    }
    94% {
        transform: translate(-2px, 2px);
        opacity: 0.08;
    }
    96% {
        transform: translate(1px, 1px);
        opacity: 0.06;
    }
}

/* Animations */
@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* ========================================
   NAVIGATE BUTTON
   ======================================== */

.navigate-button {
    position: absolute;
    bottom: 15%;
    left: 50%;
    transform: translateX(-50%);
    width: 180px;
    height: 55px;
    cursor: pointer;
    pointer-events: all;
    z-index: 100;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

.navigate-button:hover {
    transform: translateX(-50%) scale(1.05);
}

.navigate-button:hover .nav-btn-glow {
    opacity: 1;
    box-shadow:
        0 0 40px rgba(255, 255, 255, 0.6),
        0 0 80px rgba(255, 255, 255, 0.4),
        inset 0 0 20px rgba(255, 255, 255, 0.2);
}

.nav-btn-border {
    position: absolute;
    width: 100%;
    height: 100%;
    border: 2px solid rgba(255, 255, 255, 0.4);
    clip-path: polygon(
        0 10px, 10px 0,
        calc(100% - 10px) 0, 100% 10px,
        100% calc(100% - 10px), calc(100% - 10px) 100%,
        10px 100%, 0 calc(100% - 10px)
    );
    background: rgba(26, 26, 26, 0.8);
    backdrop-filter: blur(10px);
    transition: all 0.3s ease;
}

.navigate-button:hover .nav-btn-border {
    border-color: rgba(255, 255, 255, 0.8);
    box-shadow: 0 0 20px rgba(255, 255, 255, 0.3);
}

.nav-btn-border::before,
.nav-btn-border::after {
    content: '';
    position: absolute;
    width: 8px;
    height: 2px;
    background: rgba(255, 255, 255, 0.6);
    animation: navCornerScan 5s linear infinite;
}

.nav-btn-border::before {
    top: 0;
    left: 0;
}

.nav-btn-border::after {
    bottom: 0;
    right: 0;
    animation-delay: 1.5s;
}

.nav-btn-glow {
    position: absolute;
    width: 100%;
    height: 100%;
    background: radial-gradient(ellipse at center, rgba(255, 255, 255, 0.1) 0%, transparent 70%);
    opacity: 0.6;
    transition: all 0.4s ease;
}

.nav-btn-text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-family: monospace;
    font-size: 0.9rem;
    letter-spacing: 4px;
    color: rgba(255, 255, 255, 0.9);
    text-shadow:
        0 0 10px rgba(255, 255, 255, 0.5),
        0 0 20px rgba(255, 255, 255, 0.3);
    font-weight: bold;
    pointer-events: none;
    animation: navTextPulse 4s ease-in-out infinite;
}

@keyframes navCornerScan {
    0%, 100% {
        opacity: 0.3;
        transform: translateX(0);
    }
    50% {
        opacity: 1;
        transform: translateX(20px);
    }
}

@keyframes navTextPulse {
    0%, 100% {
        opacity: 0.9;
    }
    50% {
        opacity: 1;
        text-shadow:
            0 0 15px rgba(255, 255, 255, 0.8),
            0 0 30px rgba(255, 255, 255, 0.5);
    }
}

/* ========================================
   TERMINAL CONTAINER
   ======================================== */

.terminal-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 20;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.8s cubic-bezier(0.4, 0, 0.2, 1);
}

.terminal-container.active {
    opacity: 1;
    pointer-events: all;
}

.terminal-wrapper {
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

/* Matrix Canvas Background */
.matrix-canvas {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
    opacity: 0.3;
}

/* Terminal Screen */
.terminal-screen {
    position: relative;
    width: 85%;
    max-width: 1200px;
    height: 75%;
    background: rgba(0, 0, 0, 0.85);
    border: 2px solid rgba(255, 255, 255, 0.15);
    border-radius: 12px;
    box-shadow:
        0 0 60px rgba(0, 0, 0, 0.9),
        0 0 100px rgba(255, 255, 255, 0.1),
        inset 0 0 80px rgba(0, 0, 0, 0.8);
    backdrop-filter: blur(20px);
    z-index: 2;
    overflow: hidden;
    animation: terminalBoot 0.8s cubic-bezier(0.4, 0, 0.2, 1);
    clip-path: polygon(
        0 20px, 20px 0,
        calc(100% - 20px) 0, 100% 20px,
        100% calc(100% - 20px), calc(100% - 20px) 100%,
        20px 100%, 0 calc(100% - 20px)
    );
    /* Performance optimization - creates a new layer */
    transform: translateZ(0);
    will-change: transform;
}

@keyframes terminalBoot {
    0% {
        transform: scale(0.9) rotateX(10deg);
        opacity: 0;
    }
    50% {
        transform: scale(1.02) rotateX(-2deg);
    }
    100% {
        transform: scale(1) rotateX(0);
        opacity: 1;
    }
}

/* Terminal Header */
.terminal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 15px 25px;
    background: rgba(255, 255, 255, 0.03);
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    position: relative;
}

.terminal-header::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 1px;
    background: linear-gradient(90deg,
        transparent,
        rgba(255, 255, 255, 0.3) 50%,
        transparent);
    animation: headerScan 6s linear infinite;
}

@keyframes headerScan {
    0%, 100% {
        opacity: 0;
    }
    50% {
        opacity: 1;
    }
}

.terminal-controls {
    display: flex;
    gap: 8px;
}

.terminal-dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
}

.dot-close {
    background: rgba(255, 95, 87, 0.8);
    box-shadow: 0 0 10px rgba(255, 95, 87, 0.5);
}

.dot-close:hover {
    background: rgba(255, 95, 87, 1);
    box-shadow: 0 0 20px rgba(255, 95, 87, 0.8);
    transform: scale(1.2);
}

.dot-minimize {
    background: rgba(255, 189, 46, 0.8);
    box-shadow: 0 0 10px rgba(255, 189, 46, 0.5);
}

.dot-maximize {
    background: rgba(40, 201, 64, 0.8);
    box-shadow: 0 0 10px rgba(40, 201, 64, 0.5);
}

.terminal-title {
    font-family: monospace;
    font-size: 0.85rem;
    letter-spacing: 2px;
    color: rgba(255, 255, 255, 0.7);
    text-shadow: 0 0 10px rgba(255, 255, 255, 0.3);
}

.terminal-status {
    display: flex;
    align-items: center;
    gap: 8px;
    font-family: monospace;
    font-size: 0.75rem;
    letter-spacing: 1px;
    color: rgba(40, 201, 64, 0.9);
}

.status-indicator {
    width: 8px;
    height: 8px;
    background: rgba(40, 201, 64, 0.9);
    border-radius: 50%;
    box-shadow: 0 0 10px rgba(40, 201, 64, 0.8);
    animation: statusPulse 4s ease-in-out infinite;
}

@keyframes statusPulse {
    0%, 100% {
        opacity: 1;
        box-shadow: 0 0 10px rgba(40, 201, 64, 0.8);
    }
    50% {
        opacity: 0.6;
        box-shadow: 0 0 20px rgba(40, 201, 64, 1);
    }
}

/* Terminal Output */
.terminal-output {
    padding: 25px;
    height: calc(100% - 120px);
    overflow-y: auto;
    font-family: 'Courier New', monospace;
    font-size: 0.95rem;
    line-height: 1.6;
    color: rgba(255, 255, 255, 0.85);
    /* Performance optimizations */
    will-change: scroll-position;
    contain: layout style paint;
    overflow-anchor: auto;
}

.terminal-output::-webkit-scrollbar {
    width: 8px;
}

.terminal-output::-webkit-scrollbar-track {
    background: rgba(255, 255, 255, 0.05);
}

.terminal-output::-webkit-scrollbar-thumb {
    background: rgba(255, 255, 255, 0.2);
    border-radius: 4px;
}

.terminal-output::-webkit-scrollbar-thumb:hover {
    background: rgba(255, 255, 255, 0.3);
}

.terminal-line {
    margin-bottom: 8px;
    /* Animation removed for better scrolling performance */
    /* Only animate the last added line */
}

.terminal-line:last-child {
    animation: terminalLineAppear 0.3s ease-out;
}

@keyframes terminalLineAppear {
    0% {
        opacity: 0;
        transform: translateX(-10px);
    }
    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

.boot-sequence {
    animation: bootLine 0.6s ease-out forwards;
    opacity: 0;
}

.boot-sequence:nth-child(1) {
    animation-delay: 0.2s;
}

.boot-sequence:nth-child(2) {
    animation-delay: 0.5s;
}

.boot-sequence:nth-child(3) {
    animation-delay: 0.8s;
}

@keyframes bootLine {
    0% {
        opacity: 0;
        filter: blur(5px);
        transform: translateY(-10px);
    }
    100% {
        opacity: 1;
        filter: blur(0);
        transform: translateY(0);
    }
}

.terminal-prompt {
    color: rgba(40, 201, 64, 0.9);
    margin-right: 10px;
    text-shadow: 0 0 10px rgba(40, 201, 64, 0.5);
}

.terminal-text {
    color: rgba(255, 255, 255, 0.85);
}

/* Terminal Input */
.terminal-input-wrapper {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    padding: 20px 25px;
    background: rgba(0, 0, 0, 0.5);
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    display: flex;
    align-items: center;
    gap: 10px;
}

.terminal-prompt-symbol {
    color: rgba(40, 201, 64, 0.9);
    font-family: 'Courier New', monospace;
    font-size: 1.1rem;
    text-shadow: 0 0 10px rgba(40, 201, 64, 0.5);
}

.terminal-input {
    flex: 1;
    background: transparent;
    border: none;
    outline: none;
    font-family: 'Courier New', monospace;
    font-size: 0.95rem;
    color: rgba(255, 255, 255, 0.9);
    caret-color: rgba(40, 201, 64, 0.9);
}

.terminal-input::placeholder {
    color: rgba(255, 255, 255, 0.3);
}

.terminal-cursor {
    width: 10px;
    height: 20px;
    background: rgba(40, 201, 64, 0.8);
    animation: cursorBlink 1s step-end infinite;
    box-shadow: 0 0 10px rgba(40, 201, 64, 0.6);
}

@keyframes cursorBlink {
    0%, 50% {
        opacity: 1;
    }
    50.1%, 100% {
        opacity: 0;
    }
}

@keyframes smoothTransitionOut {
    0% {
        opacity: 1;
        transform: scale(1) translateY(0);
        filter: blur(0px) brightness(1);
    }
    100% {
        opacity: 0;
        transform: scale(0.95) translateY(-20px);
        filter: blur(8px) brightness(0.8);
    }
}

/* Terminal Effects */
.terminal-glitch-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 10;
    opacity: 0;
    animation: glitchEffect 20s ease-in-out infinite;
}

@keyframes glitchEffect {
    0%, 90%, 100% {
        opacity: 0;
    }
    92% {
        opacity: 0.08;
        background: linear-gradient(90deg,
            rgba(255, 0, 0, 0.05) 0%,
            rgba(0, 255, 0, 0.05) 50%,
            rgba(0, 0, 255, 0.05) 100%);
        transform: translateX(2px);
    }
    94% {
        opacity: 0.12;
        background: linear-gradient(90deg,
            rgba(0, 255, 0, 0.05) 0%,
            rgba(0, 0, 255, 0.05) 50%,
            rgba(255, 0, 0, 0.05) 100%);
        transform: translateX(-2px);
    }
    96% {
        opacity: 0.05;
        transform: translateX(0);
    }
}

.terminal-scanline {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: repeating-linear-gradient(
        0deg,
        transparent,
        transparent 2px,
        rgba(255, 255, 255, 0.03) 2px,
        rgba(255, 255, 255, 0.03) 4px
    );
    pointer-events: none;
    z-index: 9;
    animation: scanlineMove 15s linear infinite;
}

@keyframes scanlineMove {
    0% {
        transform: translateY(0);
    }
    100% {
        transform: translateY(20px);
    }
}

.terminal-grid {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image:
        repeating-linear-gradient(0deg, transparent, transparent 50px, rgba(255, 255, 255, 0.02) 50px, rgba(255, 255, 255, 0.02) 51px),
        repeating-linear-gradient(90deg, transparent, transparent 50px, rgba(255, 255, 255, 0.02) 50px, rgba(255, 255, 255, 0.02) 51px);
    pointer-events: none;
    z-index: 1;
    opacity: 0.3;
}

/* State Transitions */
.hero.terminal-active .radar-container {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.8);
    pointer-events: none;
    transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
}

.hero.terminal-active .hero-content {
    opacity: 0;
    transform: translateY(-30px);
    transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

.hero.terminal-active .neural-web {
    opacity: 0.15;
    transition: opacity 0.8s ease;
}

.hero.terminal-active .connection-layer {
    opacity: 0.1;
    transition: opacity 0.8s ease;
}

/* Mobile Responsive */
@media (max-width: 768px) {
    .hero h1 {
        font-size: 2.5rem;
        letter-spacing: 4px;
    }


    .navigate-button {
        width: 150px;
        height: 45px;
    }

    .nav-btn-text {
        font-size: 0.8rem;
        letter-spacing: 3px;
    }

    .terminal-screen {
        width: 95%;
        height: 85%;
        border-radius: 8px;
        clip-path: polygon(
            0 15px, 15px 0,
            calc(100% - 15px) 0, 100% 15px,
            100% calc(100% - 15px), calc(100% - 15px) 100%,
            15px 100%, 0 calc(100% - 15px)
        );
    }

    .terminal-header {
        padding: 12px 15px;
    }

    .terminal-title {
        font-size: 0.7rem;
        letter-spacing: 1px;
    }

    .terminal-output {
        padding: 15px;
        font-size: 0.85rem;
    }

    .terminal-input-wrapper {
        padding: 15px;
    }

    .terminal-input {
        font-size: 0.85rem;
    }
}

@media (max-width: 480px) {
    .hero h1 {
        font-size: 2rem;
        letter-spacing: 3px;
    }

    .navigate-button {
        width: 130px;
        height: 40px;
    }

    .nav-btn-text {
        font-size: 0.7rem;
        letter-spacing: 2px;
    }

    .terminal-title {
        display: none;
    }
}
